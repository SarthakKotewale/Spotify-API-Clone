{
  "openapi": "3.0.0",
  "info": {
    "title": "My User API",
    "version": "1.0.0",
    "description": "API for user management, authentication, etc."
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Operations about users"
    },
    {
      "name": "Songs",
      "description": "Operations about songs"
    },
    {
      "name": "Artists",
      "description": "Operations about artists"
    }
  ],
  "paths": {
    
    "/api/users/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Creates a new user account. The email must be unique.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The user's full name."
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The user's email address (must be unique)."
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "The user's password."
                  }
                },
                "example": {
                  "name": "John Doe",
                  "email": "john.doe@example.com",
                  "password": "strongPassword123"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "isAdmin": {
                      "type": "boolean"
                    },
                    "profilePicture": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "_id": "638e2f8f5e1b1b1b1b1b1b1b",
                    "name": "John Doe",
                    "email": "john.doe@example.com",
                    "isAdmin": false,
                    "profilePicture": "path/to/default/pic.jpg"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing fields or email already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "User with this email already exists."
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Something went wrong, please try again."
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/users/login": {
      "post": {
        "summary": "Authenticate a user",
        "description": "Logs in a user with their email and password, returning a JWT.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The user's email address."
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "The user's password."
                  }
                },
                "example": {
                  "email": "john.doe@example.com",
                  "password": "strongPassword123"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User authenticated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "isAdmin": {
                      "type": "boolean"
                    },
                    "profilePicture": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string",
                      "description": "JWT for authorization"
                    }
                  },
                  "example": {
                    "_id": "638e2f8f5e1b1b1b1b1b1b1b",
                    "name": "John Doe",
                    "email": "john.doe@example.com",
                    "isAdmin": false,
                    "profilePicture": "path/to/pic.jpg",
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYz..."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid email or password.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Invaliddd email or password"
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/users/profile": {
      "get": {
        "summary": "Get the current user's profile",
        "description": "Retrieves the full profile for the authenticated user, including liked songs, followed artists, and playlists. Requires a valid JWT.",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Profile data retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "isAdmin": {
                      "type": "boolean"
                    },
                    "profilePicture": {
                      "type": "string"
                    },
                    "likedSongs": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "likedAlbums": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "followedArtists": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "followedPlaylists": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  },
                  "example": {
                    "_id": "638e2f8f5e1b1b1b1b1b1b1b",
                    "name": "John Doe",
                    "email": "john.doe@example.com",
                    "isAdmin": false,
                    "profilePicture": "path/to/pic.jpg",
                    "likedSongs": [],
                    "likedAlbums": [],
                    "followedArtists": [],
                    "followedPlaylists": []
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token is missing or invalid."
          },
          "404": {
            "description": "Not Found - User not found."
          }
        }
      },
      "put": {
        "summary": "Update the current user's profile",
        "description": "Updates the authenticated user's name, email, password, or profile picture. All fields are optional. Requires a valid JWT.",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "New name for the user."
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "New email for the user."
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "New password for the user."
                  },
                  "profilePicture": {
                    "type": "string",
                    "format": "binary",
                    "description": "Image file to upload as the new profile picture."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1api~1users~1register/post/responses/201/content/application~1json/schema"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token is missing or invalid."
          },
          "404": {
            "description": "Not Found - User not found."
          }
        }
      }
    },

    "/api/users/like-song/{id}": {
      "put": {
        "summary": "Like or unlike a song",
        "description": "Toggles the 'liked' status of a specific song for the authenticated user. Requires a valid JWT.",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the song to like or unlike.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Action successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "likedSongs": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "likedSongs": [
                      "638e2f8f5e1b1b1b1b1c1d1e"
                    ],
                    "message": "Song added to liked songs"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "User or Song not found."
          }
        }
      }
    },

    "/api/users/follow-artist/{id}": {
      "put": {
        "summary": "Follow or unfollow an artist",
        "description": "Toggles the 'followed' status of a specific artist for the authenticated user. Requires a valid JWT.",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the artist to follow or unfollow.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Action successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "followedArtists": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "followedArtists": [
                      "638e2f8f5e1b1b1b1b1f2g2h"
                    ],
                    "message": "Artist followed"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "User or Artist not found."
          }
        }
      }
    },

    "/api/users/follow-playlist/{id}": {
      "put": {
        "summary": "Follow or unfollow a playlist",
        "description": "Toggles the 'followed' status of a specific playlist for the authenticated user. Requires a valid JWT.",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the playlist to follow or unfollow.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Action successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "followedPlaylists": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "followedPlaylists": [
                      "638e2f8f5e1b1b1b1b3i4j5k"
                    ],
                    "message": "Playlist followed"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "User or Playlist not found."
          }
        }
      }
    },

    "/api/songs": {
      "post": {
        "tags": [
          "Songs"
        ],
        "summary": "Create a new song - Admin only",
        "description": "Uploads a new song with audio, optional cover image, and metadata.",
        "operationId": "createSong",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Shape of You"
                  },
                  "artistId": {
                    "type": "string",
                    "example": "64f8a2b3c1e5f8a2b3c1e5f9"
                  },
                  "albumId": {
                    "type": "string",
                    "example": "64f8b3a1d2e5a8b3c1e5f8d2",
                    "nullable": true
                  },
                  "genre": {
                    "type": "string",
                    "example": "Pop"
                  },
                  "lyrics": {
                    "type": "string",
                    "example": "The club isn't the best place to find a lover..."
                  },
                  "isExplicit": {
                    "type": "boolean",
                    "example": false
                  },
                  "featuredArtists": {
                    "type": "string",
                    "description": "JSON array of featured artist IDs",
                    "example": "[\"64f8c3a1d2e5a8b3c1e5f8a9\"]"
                  },
                  "audio": {
                    "type": "string",
                    "format": "binary",
                    "description": "Audio file (required, e.g. mp3, wav, m4a)"
                  },
                  "cover": {
                    "type": "string",
                    "format": "binary",
                    "description": "Cover image (optional)"
                  }
                },
                "required": [
                  "title",
                  "artistId",
                  "audio"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Song created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Song"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing audio file or invalid input"
          },
          "404": {
            "description": "Artist or album not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "Songs"
        ],
        "summary": "Get all songs",
        "description": "Retrieve a list of songs with optional filtering by genre, artist, search, and pagination.",
        "operationId": "getSongs",
        "parameters": [
          {
            "name": "genre",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter songs by genre"
          },
          {
            "name": "artist",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter songs by artist ID"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search songs by title or genre (case-insensitive)"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of songs per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of songs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "songs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Song"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "pages": {
                      "type": "integer",
                      "example": 5
                    },
                    "totalSongs": {
                      "type": "integer",
                      "example": 42
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },

    "/api/artists": {
      "post": {
        "tags": [
          "Artists"
        ],
        "summary": "Create a new artist",
        "description": "Only admins can create artists. Upload artist details along with an optional image.",
        "operationId": "createArtist",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Taylor Swift"
                  },
                  "bio": {
                    "type": "string",
                    "example": "American singer-songwriter. Known for narrative songwriting."
                  },
                  "genres": {
                    "type": "string",
                    "example": "Pop, Country"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Artist image file"
                  }
                },
                "required": [
                  "name",
                  "bio",
                  "genres"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Artist created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Artist"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing fields or artist already exists"
          },
          "401": {
            "description": "Unauthorized - no token provided"
          },
          "403": {
            "description": "Forbidden - user is not an admin"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}